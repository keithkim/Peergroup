#Peergroup
A P2P Shared Storage System based on XMPP

Copyright (c) 2012 Nicolas Inden

Peergroup empowers you to synchronize data across multiple computers. You can use it to share data with your friends, you can use it as a convenient way of distributing contents, or you can set it up across multiple of your own machines to automatically sync data between them. It is also possible to use it as a way to distribute your backup data across your servers. Peergroup distributes your data in P2P fashion without the need of a central storage facility. Thus, you can be sure that all your data is only distributed to the devices that are in the same Peergroup-Channel (which is basically a XMPP Multi-User-Chat).

Whatever your intention is, the first thing you need to do is to determine the circle of users you want to use Peergroup with. Every user needs an XMPP (also known as Jabber) account at his/her favourite server. At last, start Peergroup providing it with your XMPP account and a XMPP conference channel. Of course all users that want to share with each other need to join the same conference channel.

##This is awesome! Where can I get it?
Simply clone this git-repository and proceed with the "Build & Run" section.

	git clone git@github.com:/smashnet/Peergroup.git Peergroup

##Build & Run

###Build

* cd into the Peergroup directory
* ant

###Run

To run Peergroup, you can either create your own startup command line, or you can simply modify the _pg-start_ script to your needs.

Accepted commands are:

	-h                            prints this help
	-dir            [DIR]         set the shared files directory (default: ./share/)
	-jid            [JID]         set your jabber ID (e.g. foo@jabber.bar.com)
	-res            [RESOURCE]    set the resource (default: peergroup)
	-pass           [PASS]        set the password for your JID
	-XMPPport       [PORT]        set the XMPP server port (default: 5222)
	-chan           [CHANNEL]     set the conference channel to join (e.g. foo@conference.jabber.bar.com)
	-ip             [IP]          manually set your external IP (the IP is usually guessed by the program)
	-P2Pport        [PORT]        set the port for P2P data exchange (default: 43334)
	-cSize          [SIZE]        set the chunk size for P2P data exchange (default: 512000Byte)
	-noEventQueue                 disable Event-Queue (default: enabled)

An exemplary minimal commandline would be:

	java -jar export/peergroup.jar -jid $USER@$XMPP_SERVER -pass $USER_PASS -chan $CHANNEL@$CONFERENCE_SERVER
	
To make your life easier, you can use the provided _pg-start_ script to start Peergroup. It looks like this:

	#!/bin/bash
	SERVER='<xmpp server here>'
	USER='<xmpp username here>'
	PASS='<xmpp password here>'
	
	CHANNEL='<conference channel here>'
	CSERVER='<conference server here>'

	java -Xms512M -Xmx2G -jar export/peergroup.jar -jid $USER@$SERVER -pass $PASS -chan $CHANNEL@$CSERVER
	
Enter your data, and have fun :)

##Status

See STATUS.mdown

##License
	Peergroup is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Peergroup is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

For a copy of the license see _license.txt_

##Contact
* Mail: nicolas.inden@rwth-aachen.de
* XMPP: nicolas.inden@jabber.rwth-aachen.de